name: release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest

    permissions:
      contents: write

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Setup node
        uses: actions/setup-node@v5

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: |-
          psql -X -q -v ON_ERROR_STOP=1 -f dist/delegated-registry-extended-latest.sql
          psql -X -q -v ON_ERROR_STOP=1 -c "SELECT cc, start::inet, value FROM record WHERE type IN ('ipv4', 'ipv6')"
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: postgres

      - name: Compress Release Asset
        run: |-
          gzip dist/delegated-registry-extended-latest.sql

      - name: Release
        run: gh release create ${{ github.ref_name }} dist/delegated-registry-extended-latest.sql.gz --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ github.token }}
